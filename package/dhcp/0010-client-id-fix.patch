--- dhcp-4.3.4/client/dhclient.c	2019-11-01 11:56:06.763511318 +0000
+++ dhcp-4.3.4/client/dhclient.c.new	2019-11-01 12:34:35.858651367 +0000
@@ -73,6 +73,12 @@
 int duid_v4 = 1;
 int std_dhcid = 0;
 
+static unsigned char default_ib_prefix[12] = {
+	0xff, 0x00, 0x00, 0x00,
+	0x00, 0x00, 0x02, 0x00,
+	0x00, 0x02, 0xc9, 0x00
+};
+
 /* ASSERT_STATE() does nothing now; it used to be
    assert (state_is == state_shouldbe). */
 #define ASSERT_STATE(state_is, state_shouldbe) {}
@@ -3328,7 +3334,7 @@
 		int hw_idx, hw_len;
 
 		memset(&client_identifier, 0, sizeof(client_identifier));
-		client_identifier.len = 1 + 4 + default_duid.len;
+		client_identifier.len = 20;
 		if (!buffer_allocate(&client_identifier.buffer,
 				     client_identifier.len, MDL))
 			log_fatal("no memory for default DUID!");
@@ -3339,23 +3345,14 @@
 		/* Client-identifier type : 1 byte */
 		*client_identifier.buffer->data = 255;
 
-		/* IAID : 4 bytes
-		 * we use the low 4 bytes from the interface address
-		 */
-		if (client->interface->hw_address.hlen > 4) {
-			hw_idx = client->interface->hw_address.hlen - 4;
-			hw_len = 4;
-		} else {
-			hw_idx = 0;
-			hw_len = client->interface->hw_address.hlen;
-		}
-		memcpy(&client_identifier.buffer->data + 5 - hw_len,
-		       client->interface->hw_address.hbuf + hw_idx,
-		       hw_len);
-
+		log_info("MOSHE !!!!! %x", client->interface->hw_address.hbuf);
 		/* Add the default duid */
-		memcpy(&client_identifier.buffer->data+(1+4),
-		       default_duid.data, default_duid.len);
+		memcpy(&client_identifier.buffer->data + 1,
+		       default_ib_prefix + 1, 11);
+
+		memcpy(&client_identifier.buffer->data + 12,
+		       client->interface->hw_address.hbuf + 1,
+		       8);
 
 		/* And save the option */
 		if (!(option_code_hash_lookup(&option, dhcp_universe.code_hash,
